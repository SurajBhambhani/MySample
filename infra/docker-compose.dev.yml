version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    ports:
      - "5432:5432"
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
      target: dev
    env_file:
      - ../.env.example
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@db:5432/${POSTGRES_DB:-app_db}
    volumes:
      - ../backend:/app
    ports:
      - "8000:8000"
    command: sh -c "sh ./scripts/dev.sh"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
      target: dev
    env_file:
      - ../.env.example
    working_dir: /app
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    command: sh -lc "npm ci --no-audit --no-fund && npm run dev -- --host"
    depends_on:
      - backend

volumes:
  db_data_dev:
