version: "3.9"

services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ..
      dockerfile: backend/Dockerfile
      target: prod
    env_file:
      - ../.env.example
    environment:
      APP_ENV: production
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-app}@db:5432/${POSTGRES_DB:-app_db}
      API_PORT: 8000
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ..
      dockerfile: frontend/Dockerfile
      target: prod
    env_file:
      - ../.env.example
    environment:
      # In prod, Nginx inside the frontend image proxies /api to backend
      VITE_API_BASE_URL: ""
    ports:
      - "8080:80"
    depends_on:
      - backend

volumes:
  db_data_prod:

